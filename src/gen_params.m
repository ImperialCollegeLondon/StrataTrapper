function [params] = gen_params()
params = struct(...
    'corr_lens', [50,50,0].*meter(), ...
    'capil', struct(...
        'lambda',          0.75, ...
        'contact_angle',   deg2rad(50), ...
        'surface_tension', 0.03098 * newton() / meter(), ...
        'sw_barrier',      0.39 ...
    )...
);

poro_gen = @(num_samples) randn(1,num_samples)*0.01 + 0.2;
perm_gen = @(num_samples) exp(randn(1,num_samples) + log(100)) * milli * darcy;

poro_perm_gen = @(num_samples) [poro_gen(num_samples); perm_gen(num_samples)];
params.poro_perm_gen = poro_perm_gen;

params.rel_perm.calc_krw = @(sw) calc_krw(sw);
params.rel_perm.calc_krg = @(sg) calc_krg(sg);
[~, params.rel_perm.sw_resid] = calc_krw(0);

params.capil.pres_func = @(sw,poro,perm) calc_capillary_pressure(sw,poro,perm,...
    params.capil.sw_barrier,...
    params.capil.lambda,...
    params.capil.contact_angle,...
    params.capil.surface_tension);

params.capil.pres_func_inv = @(pc,poro,perm) calc_capillary_pressure_inv(pc,poro,perm,...
    params.capil.sw_barrier,...
    params.capil.lambda,...
    params.capil.contact_angle,...
    params.capil.surface_tension);

params.capil.pres_deriv = @(sw,poro,perm) calc_capillary_pressure_deriv(sw,poro,perm,...
    params.capil.sw_barrier,...
    params.capil.lambda,...
    params.capil.contact_angle,...
    params.capil.surface_tension);
end
